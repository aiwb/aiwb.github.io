{"title":"使用服务对象访问集群中的应用","date":"2019-11-19T05:12:24.000Z","link":"use-service-access-application-in-cluster","comments":true,"categories":["运维"],"updated":"2020-04-15T21:36:20.855Z","content":"<p>这篇文章介绍怎么通过服务对象访问集群中的应用。service 给集群中的应用的两个实例提供了负载均衡的功能。</p>\n<h2 id=\"文章目标\">文章目标<a href=\"use-service-access-application-in-cluster#文章目标\"></a></h2><ul>\n<li>运行 Hello World 应用的两个实例</li>\n<li>创建服务对象暴露节点端口</li>\n<li>使用服务对象访问应用</li>\n</ul>\n<h2 id=\"开始之前\">开始之前<a href=\"use-service-access-application-in-cluster#开始之前\"></a></h2><p>开始之前需要有一个 <code>Kubernetes</code> 集群，和 <code>kubectl</code> 命令指向你要操作的集群。如果你还没集群，可以参考前面一篇文章安装 <code>Minikube</code>, 创建本地测试集群。或者可以使用下面这些在线的测试环境。</p>\n<ul>\n<li><a href=\"https://www.katacoda.com/courses/kubernetes/playground\" target=\"_blank\" rel=\"noopener\">katacoda</a></li>\n<li><a href=\"http://labs.play-with-k8s.com/\" target=\"_blank\" rel=\"noopener\">Play with Kubernetes</a></li>\n</ul>\n<a id=\"more\"></a>\n\n<h2 id=\"为运行在两个-pod-里的应用创建服务\">为运行在两个 pod 里的应用创建服务<a href=\"use-service-access-application-in-cluster#为运行在两个-pod-里的应用创建服务\"></a></h2><p>下面是一个用来创建应用发布的配置文件。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">apps/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Deployment</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">hello-world</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  selector:</span></span><br><span class=\"line\"><span class=\"attr\">    matchLabels:</span></span><br><span class=\"line\"><span class=\"attr\">      run:</span> <span class=\"string\">load-balancer-example</span></span><br><span class=\"line\"><span class=\"attr\">  replicas:</span> <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"attr\">  template:</span></span><br><span class=\"line\"><span class=\"attr\">    metadata:</span></span><br><span class=\"line\"><span class=\"attr\">      labels:</span></span><br><span class=\"line\"><span class=\"attr\">        run:</span> <span class=\"string\">load-balancer-example</span></span><br><span class=\"line\"><span class=\"attr\">    spec:</span></span><br><span class=\"line\"><span class=\"attr\">      containers:</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">hello-world</span></span><br><span class=\"line\"><span class=\"attr\">          image:</span> <span class=\"string\">gcr.io/google-samples/node-hello:1.0</span></span><br><span class=\"line\"><span class=\"attr\">          ports:</span></span><br><span class=\"line\"><span class=\"attr\">            - containerPort:</span> <span class=\"number\">8080</span></span><br><span class=\"line\"><span class=\"attr\">              protocol:</span> <span class=\"string\">TCP</span></span><br></pre></td></tr></table></div></figure>\n\n<p>通过下面的命令在你的集群中创建应用，如果懒得本地创建这个配置文件，可以直接使用线上连接。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl apply -f .<span class=\"regexp\">/path/</span>to<span class=\"regexp\">/your/</span>file/hello-application.yaml</span><br><span class=\"line\">kubectl apply -f <span class=\"string\">https:</span><span class=\"comment\">//k8s.io/examples/service/access/hello-application.yaml</span></span><br></pre></td></tr></table></div></figure>\n\n<p>上述的命令，创建了一个发布对象，和一个关联的副本集对象。副本集对象用用两个 pod，每个 pod 中运行着一个 hello world 应用实例。</p>\n<h3 id=\"查看一下创建的发布对象\">查看一下创建的发布对象<a href=\"use-service-access-application-in-cluster#查看一下创建的发布对象\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl <span class=\"built_in\">get</span> deployments hello-world</span><br><span class=\"line\">kubectl <span class=\"built_in\">describe</span> deployments hello-world</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"查看一下创建的副本集对象\">查看一下创建的副本集对象<a href=\"use-service-access-application-in-cluster#查看一下创建的副本集对象\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl <span class=\"built_in\">get</span> replicasets</span><br><span class=\"line\">kubectl <span class=\"built_in\">describe</span> replicasets</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"创建暴露发布的服务对象\">创建暴露发布的服务对象<a href=\"use-service-access-application-in-cluster#创建暴露发布的服务对象\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl expose deployment hello-world <span class=\"attribute\">--type</span>=NodePort <span class=\"attribute\">--name</span>=example-service</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"查看一下创建的服务对象\">查看一下创建的服务对象<a href=\"use-service-access-application-in-cluster#查看一下创建的服务对象\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl <span class=\"built_in\">describe</span> services <span class=\"built_in\">example</span>-service</span><br></pre></td></tr></table></div></figure>\n\n<p>输出如下：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Name:</span>                   example-service</span><br><span class=\"line\"><span class=\"symbol\">Namespace:</span>              default</span><br><span class=\"line\"><span class=\"symbol\">Labels:</span>                 run=load-balancer-example</span><br><span class=\"line\"><span class=\"symbol\">Annotations:</span>            <span class=\"params\">&lt;none&gt;</span></span><br><span class=\"line\"><span class=\"symbol\">Selector:</span>               run=load-balancer-example</span><br><span class=\"line\"><span class=\"symbol\">Type:</span>                   NodePort</span><br><span class=\"line\"><span class=\"symbol\">IP:</span>                     <span class=\"number\">10.32</span><span class=\"number\">.0</span><span class=\"number\">.16</span></span><br><span class=\"line\"><span class=\"symbol\">Port:</span>                   <span class=\"params\">&lt;unset&gt;</span> <span class=\"number\">8080</span>/TCP</span><br><span class=\"line\"><span class=\"symbol\">TargetPort:</span>             <span class=\"number\">8080</span>/TCP</span><br><span class=\"line\"><span class=\"symbol\">NodePort:</span>               <span class=\"params\">&lt;unset&gt;</span> <span class=\"number\">31496</span>/TCP</span><br><span class=\"line\"><span class=\"symbol\">Endpoints:</span>              <span class=\"number\">10.200</span><span class=\"number\">.1</span><span class=\"number\">.4</span>:<span class=\"number\">8080</span>,<span class=\"number\">10.200</span><span class=\"number\">.2</span><span class=\"number\">.5</span>:<span class=\"number\">8080</span></span><br><span class=\"line\">Session Affinity:       None</span><br><span class=\"line\"><span class=\"symbol\">Events:</span>                 <span class=\"params\">&lt;none&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<p>记录一下输出中的 NodePort 端口号</p>\n<h3 id=\"查看一下运行着-hello-world-应用-pod\">查看一下运行着 hello world 应用 pod<a href=\"use-service-access-application-in-cluster#查看一下运行着-hello-world-应用-pod\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl <span class=\"builtin-name\">get</span> pods <span class=\"attribute\">--selector</span>=<span class=\"string\">\"run=load-balancer-example\"</span> <span class=\"attribute\">--output</span>=wide</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"获取公共-ip-地址\">获取公共 ip 地址<a href=\"use-service-access-application-in-cluster#获取公共-ip-地址\"></a></h3><p>这个获取方式和你使用的集群有关，如果是 minikube 集群，可以使用</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">kubectl</span> cluster-<span class=\"literal\">info</span></span><br></pre></td></tr></table></div></figure>\n\n<p>命令获取。如果是 Google Compute Engine, 可以使用</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcloud compute instances <span class=\"built_in\">list</span></span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"创建防火墙规则，允许到公共-ip-的-tcp-请求\">创建防火墙规则，允许到公共 ip 的 tcp 请求<a href=\"use-service-access-application-in-cluster#创建防火墙规则，允许到公共-ip-的-tcp-请求\"></a></h3><h3 id=\"使用公共-ip-和-NodePort-端口访问应用\">使用公共 ip 和 NodePort 端口访问应用<a href=\"use-service-access-application-in-cluster#使用公共-ip-和-NodePort-端口访问应用\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl http://<span class=\"tag\">&lt;<span class=\"name\">public-node-ip</span>&gt;</span>:<span class=\"tag\">&lt;<span class=\"name\">node-port</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n<p>看到结果</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello Kubernetes!</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"使用配置文件\">使用配置文件<a href=\"use-service-access-application-in-cluster#使用配置文件\"></a></h2><p>上面描述了如果通过命令 <code>kubectl expose</code> 创建服务对象。我们还可以通过配置文件创建服务对象。</p>\n<p><a href=\"https://kubernetes.io/docs/concepts/services-networking/service/\" target=\"_blank\" rel=\"noopener\">见下一篇文章</a></p>\n<h2 id=\"清理测试环境\">清理测试环境<a href=\"use-service-access-application-in-cluster#清理测试环境\"></a></h2><p>删除服务对象</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl <span class=\"built_in\">delete</span> services <span class=\"built_in\">example</span>-service</span><br></pre></td></tr></table></div></figure>\n\n<p>删除发布对象，副本集对象和运行着应用的 pods</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl <span class=\"keyword\">delete</span> deployment hello-world</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"参考\">参考<a href=\"use-service-access-application-in-cluster#参考\"></a></h2><ul>\n<li><a href=\"https://kubernetes.io/docs/tasks/access-application-cluster/service-access-application-cluster/\" target=\"_blank\" rel=\"noopener\">https://kubernetes.io/docs/tasks/access-application-cluster/service-access-application-cluster/</a></li>\n</ul>\n","prev":{"title":"node.js 自然语言处理","link":"natural-language-processing-for-node-js"},"next":{"title":"minikube 介绍","link":"minikube-introduce"},"plink":"https://wuwb.github.io/use-service-access-application-in-cluster/","toc":[{"title":"文章目标","id":"文章目标","index":"1"},{"title":"开始之前","id":"开始之前","index":"2"},{"title":"为运行在两个 pod 里的应用创建服务","id":"为运行在两个-pod-里的应用创建服务","index":"3","children":[{"title":"查看一下创建的发布对象","id":"查看一下创建的发布对象","index":"3.1"},{"title":"查看一下创建的副本集对象","id":"查看一下创建的副本集对象","index":"3.2"},{"title":"创建暴露发布的服务对象","id":"创建暴露发布的服务对象","index":"3.3"},{"title":"查看一下创建的服务对象","id":"查看一下创建的服务对象","index":"3.4"},{"title":"查看一下运行着 hello world 应用 pod","id":"查看一下运行着-hello-world-应用-pod","index":"3.5"},{"title":"获取公共 ip 地址","id":"获取公共-ip-地址","index":"3.6"},{"title":"创建防火墙规则，允许到公共 ip 的 tcp 请求","id":"创建防火墙规则，允许到公共-ip-的-tcp-请求","index":"3.7"},{"title":"使用公共 ip 和 NodePort 端口访问应用","id":"使用公共-ip-和-NodePort-端口访问应用","index":"3.8"}]},{"title":"使用配置文件","id":"使用配置文件","index":"4"},{"title":"清理测试环境","id":"清理测试环境","index":"5"},{"title":"参考","id":"参考","index":"6"}],"reward":true,"copyright":{"author":"吴文斌","link":"<a href=\"https://wuwb.github.io/use-service-access-application-in-cluster/\" title=\"使用服务对象访问集群中的应用\">https://wuwb.github.io/use-service-access-application-in-cluster/</a>","license":"自由转载-非商用-禁止演绎-保持署名 (<a href=\\\"https://creativecommons.org/licenses/by-nc-nd/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)"}}