{"title":"Node","date":"2019-11-24T13:11:53.000Z","link":"docs-javascript-MDN-web-api-2019-11-24-Node","comments":true,"updated":"2020-04-15T21:36:20.855Z","content":"<p>Node 是一个接口，许多 DOM API 对象的类型会从这个接口继承。它允许我们使用相似的方式对待这些不同类型的对象；比如, 继承同一组方法，或者用同样的方式测试。</p>\n<p>以下接口都从 Node 继承其方法和属性：</p>\n<p>Document, Element, Attr, CharacterData (which Text, Comment, and CDATASection inherit), ProcessingInstruction, DocumentFragment, DocumentType, Notation, Entity, EntityReference</p>\n<p>在方法和属性不相关的特定情况下，这些接口可能返回 null。它们可能会抛出异常 - 例如，当将子节点添加到不允许子节点存在的节点时。</p>\n<h2 id=\"属性\">属性<a href=\"docs-javascript-MDN-web-api-2019-11-24-Node#属性\"></a></h2><p>从父类型 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/EventTarget\" target=\"_blank\" rel=\"noopener\">EventTarget</a> 继承属性。</p>\n<p>Node.baseURI <code>只读</code></p>\n<pre><code>返回一个表示base URL的DOMString。不同语言中的base URL的概念都不一样。 在HTML中，base URL表示协议和域名，以及一直到最后一个&apos;/&apos;之前的文件目录。</code></pre><p>Node.baseURIObject</p>\n<pre><code>(不适用于网页内容) 只读的 nsIURI 对象表示元素的base URI.</code></pre><p>Node.childNodes <code>只读</code></p>\n<pre><code>返回一个包含了该节点所有子节点的实时的 NodeList。NodeList 是“实时的”意思是，如果该节点的子节点发生了变化，NodeList对象就会自动更新。</code></pre><p>Node.firstChild <code>只读</code></p>\n<pre><code>返回该节点的第一个子节点Node，如果该节点没有子节点则返回null。</code></pre><p>Node.isConnected <code>只读</code></p>\n<pre><code>返回一个布尔值用来检测该节点是否已连接(直接或者间接)到一个上下文对象上，比如通常DOM情况下的 Document 对象，或者在shadow DOM情况下的 ShadowRoot 对象。</code></pre><p>Node.lastChild <code>只读</code></p>\n<pre><code>返回该节点的最后一个子节点Node，如果该节点没有子节点则返回 null。</code></pre><p>Node.nextSibling <code>只读</code></p>\n<pre><code>返回与该节点同级的下一个节点 Node，如果没有返回 null。</code></pre><p>Node.nodeName <code>只读</code></p>\n<pre><code>返回一个包含该节点名字的DOMString。节点的名字的结构和节点类型不同。比如HTMLElement的名字跟它所关联的标签对应，就比如HTMLAudioElement的就是 &apos;audio&apos; ，Text节点对应的是 &apos;#text&apos; 还有Document节点对应的是 &apos;#document&apos;。</code></pre><p>Node.nodeType只读<br>    返回一个与该节点类型对应的无符号短整型的值，可能的值如下：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">Name</span>\t<span class=\"string\">Value</span></span><br><span class=\"line\"><span class=\"attr\">ELEMENT_NODE</span>\t<span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">ATTRIBUTE_NODE</span> \t<span class=\"string\">2</span></span><br><span class=\"line\"><span class=\"attr\">TEXT_NODE</span>\t<span class=\"string\">3</span></span><br><span class=\"line\"><span class=\"attr\">CDATA_SECTION_NODE</span>\t<span class=\"string\">4</span></span><br><span class=\"line\"><span class=\"attr\">ENTITY_REFERENCE_NODE</span> \t<span class=\"string\">5</span></span><br><span class=\"line\"><span class=\"attr\">ENTITY_NODE</span> \t<span class=\"string\">6</span></span><br><span class=\"line\"><span class=\"attr\">PROCESSING_INSTRUCTION_NODE</span>\t<span class=\"string\">7</span></span><br><span class=\"line\"><span class=\"attr\">COMMENT_NODE</span>\t<span class=\"string\">8</span></span><br><span class=\"line\"><span class=\"attr\">DOCUMENT_NODE</span>\t<span class=\"string\">9</span></span><br><span class=\"line\"><span class=\"attr\">DOCUMENT_TYPE_NODE</span>\t<span class=\"string\">10</span></span><br><span class=\"line\"><span class=\"attr\">DOCUMENT_FRAGMENT_NODE</span>\t<span class=\"string\">11</span></span><br><span class=\"line\"><span class=\"attr\">NOTATION_NODE</span> \t<span class=\"string\">12</span></span><br></pre></td></tr></table></div></figure>\n\n<p>Node.nodeValue</p>\n<pre><code>返回或设置当前节点的值。</code></pre><p>Node.ownerDocument 只读</p>\n<pre><code>返回这个元素属于的 Document对象 。 如果没有Document对象与之关联，返回null。</code></pre><p>Node.parentNode 只读</p>\n<pre><code>返回一个当前结点 Node的父节点 。如果没有这样的结点,，比如说像这个节点是树结构的顶端或者没有插入一棵树中， 这个属性返回null。</code></pre><p>Node.parentElement 只读</p>\n<pre><code>返回一个当前节点的父节点 Element 。 如果当前节点没有父节点或者说父节点不是一个元素(Element), 这个属性返回null。</code></pre><p>Node.previousSibling 只读</p>\n<pre><code>返回一个当前节点同辈的前一个结点( Node) ，或者返回null（如果不存在这样的一个节点的话）。</code></pre><p>Node.textContent</p>\n<pre><code>返回或设置一个元素内所有子结点及其后代的文本内容。</code></pre><h2 id=\"废弃属性\">废弃属性<a href=\"docs-javascript-MDN-web-api-2019-11-24-Node#废弃属性\"></a></h2><p>废弃就不记录了</p>\n<h2 id=\"方法\">方法<a href=\"docs-javascript-MDN-web-api-2019-11-24-Node#方法\"></a></h2><p>从其父类型 EventTarget 继承方法。</p>\n<p>Node.appendChild()</p>\n<pre><code>将指定的 childNode 参数作为最后一个子节点添加到当前节点。\n如果参数引用了 DOM 树上的现有节点，则节点将从当前位置分离，并附加到新位置。</code></pre><p>Node.cloneNode()</p>\n<pre><code>克隆一个 Node，并且可以选择是否克隆这个节点下的所有内容。默认情况下，节点下的内容会被克隆。</code></pre><p>Node.compareDocumentPosition()</p>\n<pre><code>比较当前节点与文档中的另一节点的位置。</code></pre><p>Node.contains()</p>\n<pre><code>返回一个 Boolean 布尔值，来表示传入的节点是否为该节点的后代节点。</code></pre><p>Node.getRootNode()</p>\n<pre><code>返回上下文对象的根结点。如果shadow root节点存在的话，也可以在返回的节点中包含它。</code></pre><p>Node.hasChildNodes()</p>\n<pre><code>返回一个Boolean 布尔值，来表示该元素是否包含有子节点。</code></pre><p>Node.insertBefore()</p>\n<pre><code>在当前节点下增加一个子节点 Node，并使该子节点位于参考节点的前面。</code></pre><p>Node.isDefaultNamespace()</p>\n<pre><code>Accepts a namespace URI as an argument and returns a Boolean with a value of true if the namespace is the default namespace on the given node or false if not.</code></pre><p>Node.isEqualNode()</p>\n<pre><code>Returns a Boolean which indicates whether or not two nodes are of the same type and all their defining data points match.</code></pre><p>Node.isSameNode()</p>\n<pre><code>Returns a Boolean value indicating whether or not the two nodes are the same (that is, they reference the same object).</code></pre><p>Node.lookupPrefix()</p>\n<pre><code>Returns a DOMString containing the prefix for a given namespace URI, if present, and null if not. When multiple prefixes are possible, the result is implementation-dependent.</code></pre><p>Node.lookupNamespaceURI()</p>\n<pre><code>Accepts a prefix and returns the namespace URI associated with it on the given node if found (and null if not). Supplying null for the prefix will return the default namespace.</code></pre><p>Node.normalize()</p>\n<pre><code>Clean up all the text nodes under this element (merge adjacent, remove empty).</code></pre><p>Node.removeChild()</p>\n<pre><code>Removes a child node from the current element, which must be a child of the current node.</code></pre><p>Node.replaceChild()</p>\n<pre><code>Replaces one child Node of the current one with the second one given in parameter.</code></pre><h2 id=\"废弃方法\">废弃方法<a href=\"docs-javascript-MDN-web-api-2019-11-24-Node#废弃方法\"></a></h2><p>废弃就不记录了</p>\n<h2 id=\"参考\">参考<a href=\"docs-javascript-MDN-web-api-2019-11-24-Node#参考\"></a></h2><ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Node\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-CN/docs/Web/API/Node</a></li>\n</ul>\n","prev":{"title":"docs-javascript-MDN-web-api-2019-11-24-MutationObserver","link":"docs-javascript-MDN-web-api-2019-11-24-MutationObserver"},"next":{"title":"node.js 自然语言处理","link":"natural-language-processing-for-node-js"},"plink":"https://wuwb.github.io/docs-javascript-MDN-web-api-2019-11-24-Node/","toc":[{"title":"属性","id":"属性","index":"1"},{"title":"废弃属性","id":"废弃属性","index":"2"},{"title":"方法","id":"方法","index":"3"},{"title":"废弃方法","id":"废弃方法","index":"4"},{"title":"参考","id":"参考","index":"5"}],"reward":true,"copyright":{"author":"吴文斌","link":"<a href=\"https://wuwb.github.io/docs-javascript-MDN-web-api-2019-11-24-Node/\" title=\"Node\">https://wuwb.github.io/docs-javascript-MDN-web-api-2019-11-24-Node/</a>","license":"自由转载-非商用-禁止演绎-保持署名 (<a href=\\\"https://creativecommons.org/licenses/by-nc-nd/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)"}}